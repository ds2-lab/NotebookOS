[project]
name = "Distributed-Notebook"

description = "A package containing a distributed jupyter kernel and associated provisioner."

requires-python = ">=3.12"

authors = [
    {name = "Jingyuan Zhang", email = "jzhang33@gmu.edu"},
    {name = "Benjamin Carver", email = "bcarver2@gmu.edu"}
]

maintainers = [
    {name = "Benjamin Carver", email = "bcarver2@gmu.edu"}
]

dependencies = [
    "jupyter_client>=7.4",
    "traitlets>=5.1",
    "grpcio>=1.64",
    "protobuf>=5.27.1",
    "grpcio-tools",
    "pybindgen>=0.22.1",
    "ansible",
    "ansible_runner",
    "torch",
    "typing_extensions",
    "debugpy",
    "aiohttp>=3.11.11",
    "fabric",
    "jsonpatch",
    "ipykernel>=6.29.5",
    "prometheus-client>=0.20.0",
    "jupyter_server>=2.14.2",
    "jupyter",
    "requests",
    "docker",
    "jsondiff",
    "numpy",
    "redis",
    "boto3",
    "omegaconf",
    "torchmetrics",
    "python-Levenshtein",
    "wget",
    "sox",
    "librosa",
    "torchdata==0.9.0",
    "transformers",
    "datasets",
    "portalocker>=2.0.0",
    "torchaudio",
    "torchvision",
    "aioboto3>=13.4.0",
    "moto",
    "uhashring>=2.3"
]

readme = "README.md"

classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Beta",

    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",

    # Pick your license as you wish (see also "license" above)
    "License :: OSI Approved :: MIT License",

    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3.12.6",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/Scusemua/distributed-notebook/"
Documentation = "https://github.com/Scusemua/distributed-notebook/"
Repository = "https://github.com/Scusemua/distributed-notebook/"
Issues = "https://github.com/Scusemua/distributed-notebook/issues"

[tool.setuptools]
py-modules = [
    "distributed_notebook"
]

[project.entry-points."jupyter_client.kernel_provisioners"]
gateway-provisioner = "distributed_notebook.provisioner.gateway_provisioner:GatewayProvisioner"

[tool.pytest.ini_options]
asyncio_mode="auto"
asyncio_default_fixture_loop_scope="function"
testpaths=[ "distributed_notebook/tests", "distributed_notebook/model/tests" ]

[project.optional-dependencies]
dev = [
    "tomli",
    "pytest",
    "pytest-asyncio",
    "fakeredis",
]