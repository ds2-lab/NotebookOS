services:
  jupyter:
    environment:
      - "DOCKER_NETWORK_NAME=traefik-public"
      - "USING_WSL2=0"
      - "NUM_CLUSTER_GATEWAYS=1"
      - "GATEWAY_GRPC_PORT=8080"
      - "_BASE_ADDRESS=gateway"
    image: scusemua/jupyter-cpu-dev:latest
    command: start-notebook.sh --NotebookApp.token='' --ServerApp.base_url="/jupyter" --log-level=DEBUG
    networks:
      - traefik-public
      - distributed_cluster_default
    depends_on:
      - gateway
    labels: # Container labels
      - "app=distributed_cluster"
      - "component=jupyter_server"
      - "logging=promtail"
      - "logging_jobname=jupyter"
      - "prometheus-metrics-provider=true"
      - "prometheus.metrics.port=8888"
      - "prometheus.metrics.basepath=/jupyter"
    deploy:
      placement:
        constraints:
          - "node.labels.swarm_role == swarm-leader"
      restart_policy:
        condition: any
      endpoint_mode: dnsrr
      labels: # Service labels
        - "app=distributed_cluster"
        - "component=jupyter_server"
        - "logging=promtail"
        - "logging_jobname=jupyter"

        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.jupyter-http.entryPoints=http"
        - "traefik.http.routers.jupyter-http.rule=Host(`18.211.101.117`) && PathPrefix(`/jupyter`)"

        - "traefik.http.services.jupyter.loadbalancer.server.port=8888"
        - "traefik.http.routers.jupyter-http.service=jupyter"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gateway:
    environment:
      - "DOCKER_NETWORK_NAME=traefik-public"
      - "USING_WSL2=0"
    image: scusemua/gateway:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./gateway/gateway.yml:/gateway.yml
    networks:
      - traefik-public
      - distributed_cluster_default
    labels: # Container labels
      - "app=distributed_cluster"
      - "component=cluster_gateway"
      - "logging=promtail"
      - "logging_jobname=cluster_gateway"
      - "prometheus.metrics.port=8089"
      - "prometheus-metrics-provider=true"
    deploy:
      placement:
        constraints:
          - "node.labels.swarm_role == swarm-leader"
      restart_policy:
        condition: any
      endpoint_mode: dnsrr
      labels:
        - "app=distributed_cluster"
        - "component=cluster_gateway"
        - "logging=promtail"
        - "logging_jobname=gateway"

        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.gateway-http.entryPoints=http"
        - "traefik.http.routers.gateway-http.rule=Host(`18.211.101.117`) && PathPrefix(`/gateway`)"
        - "traefik.http.middlewares.gateway-strip.stripprefix.prefixes=/gateway"
        - "traefik.http.routers.gateway-http.middlewares=gateway-strip"

        - "traefik.http.services.gateway.loadbalancer.server.port=9996"
        - "traefik.http.routers.gateway-http.service=gateway"
    depends_on:
      - prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  daemon:
    environment:
      - "KERNEL_TEMP_BASE_IN_CONTAINER=/kernel_base"
      - "KERNEL_IMAGE=scusemua/jupyter-cpu-dev:latest"
      - "HOST_MOUNT_DIR=/home/ubuntu/kernel_base"
      - "TARGET_MOUNT_DIR=/kernel_base"
      - "STORAGE=/home/ubuntu/kernel_storage"
      - "DOCKER_NETWORK_NAME=traefik-public"
    image: scusemua/daemon:latest
    networks:
      - traefik-public
      - distributed_cluster_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/kernel_base:/kernel_base
      - ./local_daemon/daemon.yml:/daemon.yml
    depends_on:
      - gateway
      - prometheus
    labels: # Container labels
      - "app=distributed_cluster"
      - "component=local_daemon"
      - "logging=promtail"
      - "logging_jobname=local_daemon"
      - "prometheus.metrics.port=8089"
      - "prometheus-metrics-provider=true"
    deploy:
      restart_policy:
        condition: any
      mode: global
      endpoint_mode: dnsrr
      labels:
        - "app=distributed_cluster"
        - "component=local_daemon"
        - "logging=promtail"
        - "logging_jobname=local_daemon"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - traefik-public
      - distributed_cluster_default
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.listen-address=0.0.0.0:8500"
      - "--storage.tsdb.retention.time=120d"
      - "--web.enable-admin-api"
      # - "--web.external-url=http://18.211.101.117/prometheus"
      # - "--web.route-prefix=/"
      # - "--web.enable-admin-api"
    image: prom/prometheus:main
    deploy:
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.prometheus-http.entryPoints=http"
        - "traefik.http.routers.prometheus-http.rule=Host(`18.211.101.117`) && PathPrefix(`/prometheus`)"
        - "traefik.http.middlewares.prometheus-strip.stripprefix.prefixes=/prometheus"
        - "traefik.http.routers.prometheus-http.middlewares=prometheus-strip"

        - "traefik.http.services.prometheus.loadbalancer.server.port=8500"
        - "traefik.http.routers.prometheus-http.service=prometheus"
    user: 0:0
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    image: grafana/loki:3.2.0
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - traefik-public
      - distributed_cluster_default
    deploy:
      endpoint_mode: dnsrr
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.loki-http.entryPoints=http"
        - "traefik.http.routers.loki-http.rule=Host(`18.211.101.117`) && PathPrefix(`/loki`)"
        - "traefik.http.middlewares.loki-strip.stripprefix.prefixes=/loki"
        - "traefik.http.routers.loki-http.middlewares=loki-strip"

        - "traefik.http.services.loki.loadbalancer.server.port=3100"
        - "traefik.http.routers.loki-http.service=loki"
    volumes:
      - loki_data:/loki
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:3.2.0
    networks:
      - traefik-public
      - distributed_cluster_default
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    deploy:
      endpoint_mode: dnsrr
      mode: global
      labels:
        - "traefik.http.services.promtail.loadbalancer.server.port=9080"
    depends_on:
      - loki

  grafana:
    image: grafana/grafana-enterprise:latest
    networks:
      - traefik-public
      - distributed_cluster_default
    environment:
      - "GF_SECURITY_ADMIN_USER=grafana"
      - "GF_SECURITY_ADMIN_PASSWORD=12345"
      - "GF_PATHS_LOGS=/var/lib/grafana/logs"
      - "GF_PATHS_PLUGINS=/var/lib/grafana/plugins"
      - "GF_PATHS_DATA=/var/lib/grafana/data"
      - "GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource,sebastiangunreben-cdf-panel"
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    user: ":"
    deploy:
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.grafana-http.entryPoints=http"
        - "traefik.http.routers.grafana-http.rule=Host(`18.211.101.117`) && PathPrefix(`/grafana`)"
        # - "traefik.http.middlewares.grafana-strip.stripprefix.prefixes=/grafana"
        # - "traefik.http.routers.grafana-http.middlewares=grafana-strip"

        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana-http.service=grafana"

  notebook-dashboard:
    image: "scusemua/distributed-notebook-dashboard-backend:latest"
    networks:
      - traefik-public
      - distributed_cluster_default
    environment:
      - "DASHBOARD_CONFIG_DIR=/etc/distributed-notebook-cluster"
    labels: # Container labels
      - "app=distributed_cluster"
      - "component=notebook_dashboard"
      - "logging=promtail"
      - "logging_jobname=notebook_dashboard"
      - "prometheus.metrics.port=8089"
    deploy:
      placement:
        constraints:
          - "node.labels.swarm_role == swarm-leader"
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      labels:
        - "app=distributed_cluster"
        - "component=notebook_dashboard"
        - "logging=promtail"
        - "logging_jobname=notebook_dashboard"
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "prometheus-metrics-provider=true"

        - "traefik.http.routers.notebook-dashboard-http.entryPoints=http"
        - "traefik.http.routers.notebook-dashboard-http.rule=Host(`18.211.101.117`) && PathPrefix(`/notebook-dashboard`)"
        - "traefik.http.routers.notebook-dashboard-http.service=notebook-dashboard"
        - "traefik.http.services.notebook-dashboard.loadbalancer.server.port=8000"
    volumes:
      - ./dashboard_backend/config-docker.yaml:/etc/distributed-notebook-cluster/dashboard.yaml
      - ./dashboard_backend/workload-presets-file.yaml:/etc/distributed-notebook-cluster/workload-presets-file.yaml
      - ./dashboard_backend/workload-templates-file.yaml:/etc/distributed-notebook-cluster/workload-templates-file.yaml
      - ./dashboard_backend/workload-job-config.yaml:/etc/distributed-notebook-cluster/workload-job-config.yaml
      - ./dashboard_backend/custom_event_sequences:/etc/distributed-notebook-cluster/custom_event_sequences
      - ./dashboard_backend/workload_templates:/etc/distributed-notebook-cluster/workload_templates
      - ./dashboard_backend/.env:/go/.env

  node-exporter:
    image: prom/node-exporter
    labels:
      - "traefik.enable=true"
      - "app=distributed_cluster"
      - "component=node-exporter"
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "app=distributed_cluster"
        - "component=node-exporter"
    command:
      - "--web.listen-address=0.0.0.0:7125"
    networks:
      - traefik-public
      - distributed_cluster_default

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    labels:
      - "traefik.enable=true"
      - "app=distributed_cluster"
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "app=distributed_cluster"
        - "component=cadvisor"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        - "traefik.http.routers.cadvisor-http.entryPoints=http"
        - "traefik.http.routers.cadvisor-http.rule=Host(`18.211.101.117`) && PathPrefix(`/cadvisor`)"
        - "traefik.http.middlewares.cadvisor-strip.stripprefix.prefixes=/cadvisor"
        - "traefik.http.routers.cadvisor-http.middlewares=cadvisor-strip"

        - "traefik.http.services.cadvisor.loadbalancer.server.port=7126"
        - "traefik.http.routers.cadvisor-http.service=cadvisor"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    ports:
      - "7126:7126"  # Expose the new port
    command:
      - "-port=7126"
    networks:
      - traefik-public
      - distributed_cluster_default
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:7126/healthz']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  coredumps_volume:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
  redis_data:

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true
    attachable: true
  distributed_cluster_default:
    external: true
    attachable: true