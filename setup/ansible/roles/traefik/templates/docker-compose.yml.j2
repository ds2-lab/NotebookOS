services:
  traefik:
    image: traefik:v3.2
    ports:
      # Host mode is essential to work with IPv6
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      # Listen on port 443, default for HTTPS
      - target: 443
        published: 443
        mode: host
        protocol: tcp
      # traefik ui
      - "'{{ traefik_ui_port }}:{{ traefik_ui_port }}'"
    networks:
      - traefik-public
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--providers.docker"

      - "--providers.docker.network=traefik-public"
      - "--providers.docker.exposedbydefault=false"

      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.network=traefik-public"
      - "--providers.swarm.constraints=Label(`traefik.constraint-label`, `traefik-public`)"

      # Enable the access log, with HTTP requests
      - "--accesslog"
      # Enable the Traefik log, for configurations and errors
      - "--log"
      - "--log.level=debug"

      # Enable the Dashboard and API
      - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"

      - "--entryPoints.http.address=:80"
      - "--entryPoints.traefik-admin-dashboard.address=:{{ traefik_ui_port }}"
    environment:
    - "TRAEFIK_API_INSECURE=true"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"

        # - "traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}"
        # - "traefik.http.routers.traefik-public-http.rule=Host(`{{ hostvars['swarm-leader'].ansible_host }}`)"

        # - "traefik.http.routers.traefik-http-public.middlewares=admin-auth"

        - "traefik.http.routers.api-internal.service=api@internal"
        - "traefik.http.routers.api-internal.rule=Host(`{{ hostvars['swarm-leader'].ansible_host }}`) && PathPrefix(`traefik-dashboard`)"
        - "traefik.http.routers.api-internal.middlewares=admin-auth"

        - "traefik.http.routers.traefik-http-public.service=api@internal"
        - "traefik.http.routers.traefik-http-public.rule=Host(`{{ hostvars['swarm-leader'].ansible_host }}`)"
        - "traefik.http.routers.traefik-http-public.loadbalancer.server.port={{ traefik_ui_port }}"
        - "traefik.http.routers.traefik-http-public.entrypoints=traefik-admin-dashboard"

# volumes:
  # Create a volume to store the certificates, there is a constraint to make sure
  # Traefik is always deployed to the same Docker node with the same volume containing
  # the HTTPS certificates
  # traefik-public-certificates:

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true