- name: Install protoc
  hosts: vms
  remote_user: "{{ remote_username }}"
  become: true       # Run tasks as root
  gather_facts: true
  environment:
    LD_LIBRARY_PATH: "{{ python_build_dir }}/Python-{{ python_version }}:$LD_LIBRARY_PATH"
  vars:
    ansible_remote_tmp: "{{ tmp_dir }}"

  tasks:
    - name: Check if protoc is already installed
      shell: ". {{ profile_file }} && protoc --version"
      register: protoc_installed
      ignore_errors: true

    - name: Display Protoc version that is already installed
      debug:
        msg: "Protoc version: {{ protoc_installed.stdout }}"
      when: protoc_installed.rc == 0

    - name: Create the target directory if it doesn't exist
      file:
        path: "{{ protoc_install_parent_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      when: protoc_installed.rc != 0

    - name: Download Protoc release if not already installed
      get_url:
        url: "{{ protoc_release_url }}"
        dest: "{{ tmp_dir }}/protoc-{{ protoc_version }}-linux-x86_64.zip"
      when: protoc_installed.rc != 0

    - name: Update package index
      apt:
        update_cache: yes
      when: ansible_distribution == 'Ubuntu' and protoc_installed.rc != 0

    - name: Install required packages (Amazon Linux)
      yum:
        name: ['unzip']
        state: present
      when: ansible_distribution == 'Amazon' and protoc_installed.rc != 0

    - name: Install required packages (Ubuntu)
      apt:
        name: ['unzip']
        state: present
      when: ansible_distribution == 'Ubuntu' and protoc_installed.rc != 0

    - name: Unzip Protoc release into the local directory
      unarchive:
        src: "{{ tmp_dir }}/protoc-{{ protoc_version }}-linux-x86_64.zip"
        dest: "{{ protoc_install_parent_dir }}"
        remote_src: yes
      when: protoc_installed.rc != 0

    - name: Ensure the local bin directory is in the PATH
      lineinfile:
        path: "{{ profile_file }}"
        regexp: '^export PATH=.*{{ protoc_install_parent_dir }}/bin'
        line: 'export PATH="$PATH:{{ protoc_install_parent_dir }}/bin"'
        state: present

    - name: Verify Protoc installation
      shell: ". {{ profile_file }} && protoc --version"
      register: protoc_version_output
      when: protoc_installed.rc != 0

    - name: Display Protoc version installed
      debug:
        msg: "Protoc version: {{ protoc_version_output.stdout }}"
      when: protoc_installed.rc != 0
