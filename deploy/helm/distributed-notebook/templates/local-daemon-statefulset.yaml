apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  name: local-daemon
  namespace: {{ .Release.Namespace }}
  labels:
    app: local-daemon
spec:
  replicas: 10
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: local-daemon
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: local-daemon
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - local-daemon
            topologyKey: "kubernetes.io/hostname"
      containers:
        - env:
            - name: HOST_MOUNT_DIR
              value: /home/bcarver2/kernel_base
            - name: KERNEL_IMAGE
              value: {{ .Values.notebook_server.image }}:{{ .Values.notebook_server.image_tag }}
            - name: KERNEL_NETWORK
              value: local_daemon_default
            - name: KERNEL_TEMP_BASE
              value: /kernel_base
            # - name: STORAGE
            #   value: local_daemon_storage
            # - name: TARGET_MOUNT_DIR
            #   value: /kernel_base
          image: {{ .Values.local_daemon.image }}:{{ .Values.local_daemon.image_tag }}
          name: local-daemon
          resources: {}
          volumeMounts:
            - name: daemon-storage
              mountPath: /data
      restartPolicy: Always
  volumeClaimTemplates: # This will be used to create a unique PVC for each of the LocalDaemon pods.
    - metadata:
        name: daemon-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-path
        resources:
          requests:
            storage: {{ .Values.local_daemon.pvc_size }}
status: {}