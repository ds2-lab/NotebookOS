# Important: this value should not be changed.
# If you have to change it, then you need to update the code.
# Specifically, you need to change the value of the 'DockerProjectName' variable/const that is defined in "gateway/domain/types.go".
name: distributed_cluster

services:
  docker-hoster:
    platform: linux/amd64
    build:
      context: ../..
      dockerfile: deploy/docker/hoster/Dockerfile
    image: scusemua/docker-hoster:latest
    labels:
      app: "distributed_cluster"
    container_name: "docker-hoster"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
    extra_hosts:
      - "host.docker.internal:host-gateway"

  jupyter:
    platform: linux/amd64
    environment:
      - DOCKER_NETWORK_NAME=distributed_cluster_default # If you change the name of the docker compose app, then you must change this as well.
      - USING_WSL2=1
    image: scusemua/jupyter-debug:latest
    labels:
      app: "distributed_cluster"
      logging: "promtail"
      logging_jobname: "jupyter"
    container_name: "jupyter"
    command: start-notebook.sh --NotebookApp.token='' --log-level=DEBUG
    expose:
      - 8888
    ports:
      - "8888:8888"
    depends_on:
      - gateway
      - docker-hoster
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gateway:
    platform: linux/amd64
    environment:
      - DOCKER_NETWORK_NAME=distributed_cluster_default # If you change the name of the docker compose app, then you must change this as well.
      - USING_WSL2=1
    image: scusemua/gateway:latest
    labels:
      app: "distributed_cluster"
      logging: "promtail"
      logging_jobname: "jupyter"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {@current_directory}/gateway/gateway.yml:/gateway.yml
      - {@current_directory}/local_daemon/daemon.yml:/local_daemon/daemon.yml
      - {@current_directory}/docker-compose.yml:/docker-compose.yml
      - /home/$USER/kernel_base:/home/$USER/kernel_base
    container_name: "gateway"
    restart: unless-stopped
    expose:
      - 8079
      - 9996
      - 8081
    ports:
      - "8079:8079"
      - "9996:9996"
      - "8081:8081"
      - "8089:8089"
    depends_on:
      - docker-hoster
      - prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  daemon:
    platform: linux/amd64
    environment:
      - KERNEL_TEMP_BASE=/kernel_base
      - KERNEL_IMAGE=scusemua/jupyter-debug:latest
      - HOST_MOUNT_DIR=/home/$USER/kernel_base
      - TARGET_MOUNT_DIR=/kernel_base
      - STORAGE=/home/$USER/kernel_storage
      - DOCKER_NETWORK_NAME=distributed_cluster_default # If you change the name of the docker compose app, then you must change this as well.
      - USING_WSL2=1
    image: scusemua/daemon:latest
    labels:
      app: "distributed_cluster"
      logging: "promtail"
      logging_jobname: "jupyter"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/$USER/kernel_base:/kernel_base
      - {@current_directory}/local_daemon/daemon.yml:/daemon.yml
    depends_on:
      - gateway
      - docker-hoster
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  init-prometheus:
    platform: linux/amd64
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus/data
    image: busybox:latest
    command: ["/bin/chmod","-R","777", "/prometheus"]
    container_name: prometheus-data-permission-fix
    user: 0:0

  prometheus:
    platform: linux/amd64
    ports:
      - "8500:8500"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus/data
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=0.0.0.0:8500
      - --web.enable-admin-api
    image: prom/prometheus:main
    container_name: prometheus
    restart: unless-stopped
    user: "1000:1000"
    depends_on:
      init-prometheus:
        condition: service_completed_successfully
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    image: grafana/loki:3.2.0
    command: -config.file=/etc/loki/loki-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:3.2.0
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  grafana:
    platform: linux/amd64
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=scusemua
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana

volumes:
  storage:
  coredumps_volume:
  prometheus_data:
  grafana_data:
