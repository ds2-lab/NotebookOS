kernel-registry-port: 8075
port: 8080
provisioner-port: 8081
provisioner: "gateway:8081"
hb-port: 9000
control-port: 9001
shell-port: 9002
stdin-port: 9003
iopub-port: 9004
iosub-port: 9005
ack-port: 9006
#remote-storage-endpoint: host.docker.internal:10000
#remote-storage: hdfs
remote-storage: redis
remote-storage-endpoint: redis:6379
debug: true
direct: false
node_name: 0
num-replicas: 3
max-subscribed-ratio: 7.0
local-daemon-service-name: local-daemon-network
global-daemon-service-name: daemon-network
local-daemon-service-port: 8075
ipython-config-path: /home/jovyan/.ipython/profile_default/ipython_config.json
smr-port: 8080
kube-namespace: default
starting-resource-port: 9007
num-resource-ports: 4096
use-stateful-set: false
device-plugin-path: /var/lib/kubelet/device-plugins/
notebook-image-name: scusemua/jupyter-cpu:latest
notebook-image-tag: latest
scheduler-http-port: 8078
idle-session-reclamation-policy: none
scheduling-policy: middle-ground
# scheduling-policy: fcfs-batch
subscribed-ratio-update-interval: 1
num-virtual-gpus-per-node: 72
scaling-factor: 1.10
scaling-interval: 15
scaling-limit: 1.15
scaling-in-limit: 2
predictive_autoscaling: true
scaling-buffer-size: 3
min_cluster_nodes: 6
max_cluster_nodes: 48
gpus-per-host: 8
local_mode: false
deployment_mode: "docker-compose"
debug_port: 9996
debug_mode: true
docker-storage-base: "/storage"
using-wsl: true 
prometheus_interval: 15
prometheus_port: 8089
num_resend_attempts: 1
run_kernels_in_gdb: false
acks_enabled: false
checkpointing_enabled: true
docker_app_name: distributed_notebook
election_timeout_seconds: 3
simulate_checkpointing_latency: true
pretty_print_options: true
starting_resource_port: 16007
num_resource_ports: 4096
use_real_gpus: false
bind_debugpy_port: false
save_stopped_kernel_containers: true
s3_bucket: "distributed-notebook-storage"
aws_region: "us-east-1"
redis_password: ""
redis_port: 6379
redis_database: 0
prewarming_enabled: true
min_prewarm_containers_per_host: 1
max_prewarm_containers_per_host: 3
prewarming_policy: maintain_minimum_capacity