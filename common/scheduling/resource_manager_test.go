package scheduling_test

import (
	"errors"
	"fmt"
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
	"github.com/zhangjyr/distributed-notebook/common/scheduling"
	"github.com/zhangjyr/distributed-notebook/common/types"
)

func containsOffendingResourceKind(lst []scheduling.ResourceKind, target scheduling.ResourceKind) bool {
	for _, elem := range lst {
		if elem == target {
			return true
		}
	}

	return false
}

var _ = Describe("ResourceManager", func() {
	var resourceManager *scheduling.ResourceManager
	resourceManagerSpec := types.NewDecimalSpec(8000, 64000, 8, 32)

	BeforeEach(func() {
		resourceManager = scheduling.NewResourceManager(resourceManagerSpec)
	})

	It("Will correctly handle the scheduling of a pending resource request", func() {
		kernel1Spec := types.NewDecimalSpec(4000, 16000, 2, 8)

		err := resourceManager.KernelReplicaScheduled(1, "Kernel1", kernel1Spec)
		Expect(err).To(BeNil())

		Expect(resourceManager.SpecResources().Equals(resourceManagerSpec)).To(BeTrue())

		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.NumAllocations()).To(Equal(1))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))

		Expect(resourceManager.PendingResources().Equals(kernel1Spec))
		Expect(resourceManager.IdleResources().Equals(resourceManagerSpec)).To(BeTrue())
		Expect(resourceManager.CommittedResources().IsZero()).To(BeTrue())
	})

	It("Will correctly handle the promotion of a pending resource allocation to a committed allocation", func() {
		kernel1Spec := types.NewDecimalSpec(4000, 16000, 2, 8)

		err := resourceManager.KernelReplicaScheduled(1, "Kernel1", kernel1Spec)
		Expect(err).To(BeNil())

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())

		Expect(resourceManager.NumPendingAllocations()).To(Equal(0))
		Expect(resourceManager.NumAllocations()).To(Equal(1))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))

		Expect(resourceManager.PendingResources().IsZero()).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(resourceManagerSpec.Subtract(kernel1Spec))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(kernel1Spec)).To(BeTrue())
	})

	It("Will correctly handle scheduling multiple committed resources", func() {
		By("Correctly handling the scheduling of the first pending resources")

		kernel1Spec := types.NewDecimalSpec(4000, 16000, 2, 8)
		err := resourceManager.KernelReplicaScheduled(1, "Kernel1", kernel1Spec)

		Expect(err).To(BeNil())
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))

		By("Correctly handling the scheduling of the second pending resources")

		kernel2Spec := types.NewDecimalSpec(3000, 12000, 2, 8)
		err = resourceManager.KernelReplicaScheduled(1, "Kernel2", kernel2Spec)

		Expect(err).To(BeNil())
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))

		By("Correctly handling the scheduling of the first committed resources")

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)

		Expect(err).To(BeNil())
		Expect(resourceManager.NumAllocations()).To(Equal(2))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))

		By("Correctly handling the scheduling of the second committed resources")

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())

		kernel1And2Spec := kernel1Spec.Add(kernel2Spec)

		Expect(resourceManager.NumPendingAllocations()).To(Equal(0))
		Expect(resourceManager.NumAllocations()).To(Equal(2))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))

		Expect(resourceManager.PendingResources().IsZero()).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(resourceManagerSpec.Subtract(kernel1And2Spec))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(kernel1And2Spec)).To(BeTrue())

		By("Correctly handling the scheduling of the third pending resources")

		kernel3spec := types.NewDecimalSpec(2000, 0, 0, 0)
		err = resourceManager.KernelReplicaScheduled(1, "Kernel3", kernel3spec)

		Expect(err).To(BeNil())
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.NumAllocations()).To(Equal(3))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))

		By("Correctly rejecting the scheduling of the third committed resources due to lack of available CPU")

		err = resourceManager.CommitResources(1, "Kernel3", kernel3spec, false)
		Expect(err).ToNot(BeNil())

		var insufficientResourcesError *scheduling.InsufficientResourcesError
		ok := errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())

		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(insufficientResourcesError.OffendingResourceKinds[0]).To(Equal(scheduling.CPU))
		Expect(insufficientResourcesError.RequestedResources).To(Equal(kernel3spec))
		Expect(insufficientResourcesError.AvailableResources).To(Equal(resourceManager.IdleResources()))

		By("Correctly handling the scheduling of the fourth pending resources")

		kernel4spec := types.NewDecimalSpec(0, 0, 6, 0)
		err = resourceManager.KernelReplicaScheduled(1, "Kernel4", kernel4spec)
		Expect(err).To(BeNil())

		By("Correctly rejecting the scheduling of the fourth committed resources due to lack of available GPU")

		err = resourceManager.CommitResources(1, "Kernel4", kernel4spec, false)
		Expect(err).ToNot(BeNil())

		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())

		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(insufficientResourcesError.OffendingResourceKinds[0]).To(Equal(scheduling.GPU))
		Expect(insufficientResourcesError.RequestedResources).To(Equal(kernel4spec))
		Expect(insufficientResourcesError.AvailableResources).To(Equal(resourceManager.IdleResources()))

		By("Correctly handling the scheduling of the fifth pending resources")

		kernel5spec := types.NewDecimalSpec(0, 64000, 0, 0)
		err = resourceManager.KernelReplicaScheduled(1, "Kernel5", kernel5spec)
		Expect(err).To(BeNil())

		By("Correctly rejecting the scheduling of the fifth committed resources due to lack of available memory")

		err = resourceManager.CommitResources(1, "Kernel5", kernel5spec, false)
		Expect(err).ToNot(BeNil())

		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())

		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(insufficientResourcesError.OffendingResourceKinds[0]).To(Equal(scheduling.Memory))
		Expect(insufficientResourcesError.RequestedResources).To(Equal(kernel5spec))
		Expect(insufficientResourcesError.AvailableResources).To(Equal(resourceManager.IdleResources()))

		By("Correctly handling the scheduling of the sixth pending resources")

		kernel6spec := types.NewDecimalSpec(0, 0, 0, 32)
		err = resourceManager.KernelReplicaScheduled(1, "Kernel6", kernel6spec)
		Expect(err).To(BeNil())

		By("Correctly rejecting the scheduling of the sixth committed resources due to lack of available memory")

		err = resourceManager.CommitResources(1, "Kernel6", kernel6spec, false)
		Expect(err).ToNot(BeNil())

		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())

		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(insufficientResourcesError.OffendingResourceKinds[0]).To(Equal(scheduling.VRAM))
		Expect(insufficientResourcesError.RequestedResources).To(Equal(kernel6spec))
		Expect(insufficientResourcesError.AvailableResources).To(Equal(resourceManager.IdleResources()))

		By("Correctly handling the scheduling of the seventh pending resources")

		kernel7spec := resourceManagerSpec.Clone()
		err = resourceManager.KernelReplicaScheduled(1, "Kernel7", kernel7spec)
		Expect(err).To(BeNil())

		By("Correctly rejecting the scheduling of the seventh committed resources due to lack of availability for all resource types")

		err = resourceManager.CommitResources(1, "Kernel7", kernel7spec, false)
		Expect(err).ToNot(BeNil())

		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())

		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(4))

		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.Memory)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.VRAM)).To(BeTrue())

		Expect(insufficientResourcesError.RequestedResources).To(Equal(kernel7spec))
		Expect(insufficientResourcesError.AvailableResources).To(Equal(resourceManager.IdleResources()))
	})

	It("Will correctly handle a series of allocations and de-allocations", func() {
		kernel1Spec := types.NewDecimalSpec(1000, 2000, 2, 4)
		kernel2Spec := types.NewDecimalSpec(2000, 4000, 6, 12)
		kernel3Spec := types.NewDecimalSpec(5000, 12000, 2, 3)
		kernel4Spec := types.NewDecimalSpec(500, 1000, 1, 1)

		specs := []*types.DecimalSpec{kernel1Spec, kernel2Spec, kernel3Spec, kernel4Spec}

		sumFirstNSpecs := func(n int) *types.DecimalSpec {
			sumSpec := types.NewDecimalSpec(0, 0, 0, 0)

			for i := 0; i < n; i++ {
				sumSpec = sumSpec.Add(specs[i])
			}

			return sumSpec
		}

		By("Correctly handling all the replicas being scheduled (pending)")
		for i, spec := range specs {
			err := resourceManager.KernelReplicaScheduled(1, fmt.Sprintf("Kernel%d", i+1), spec)

			Expect(err).To(BeNil())

			Expect(resourceManager.NumAllocations()).To(Equal(i + 1))
			Expect(resourceManager.NumPendingAllocations()).To(Equal(i + 1))
			Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))

			Expect(resourceManager.IdleResources()).To(Equal(resourceManagerSpec))
			Expect(resourceManager.CommittedResources().IsZero()).To(BeTrue())

			sumSpec := sumFirstNSpecs(i + 1)
			Expect(sumSpec).ToNot(BeNil())

			GinkgoWriter.Printf("sumSpec: %s\n", sumSpec.String())
			GinkgoWriter.Printf("resourceManager.PendingResources(): %s\n", resourceManager.PendingResources().String())

			Expect(resourceManager.PendingResources().Equals(sumSpec)).To(BeTrue())
		}

		// The code below is generated by the scripts/gen_res_mgr_unit_test.py Python script.

		var err error
		var ok bool
		var insufficientResourcesError *scheduling.InsufficientResourcesError

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6500, 61000, 5, 27))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1500, 3000, 3, 5))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6500, 61000, 5, 27))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1500, 3000, 3, 5))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6000, 60000, 2, 20))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2000, 4000, 6, 12))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel2")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6000, 60000, 2, 20))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2000, 4000, 6, 12))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(5500, 59000, 1, 19))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2500, 5000, 7, 13))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel3Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(5500, 59000, 1, 19))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2500, 5000, 7, 13))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6000, 60000, 2, 20))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2000, 4000, 6, 12))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.ReleaseCommittedResources(1, "Kernel2")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(3000, 52000, 6, 29))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5000, 12000, 2, 3))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel3")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(2))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.CPU)).To(BeTrue())
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).ToNot(BeNil())
		ok = errors.As(err, &insufficientResourcesError)
		Expect(ok).To(BeTrue())
		Expect(insufficientResourcesError).ToNot(BeNil())
		Expect(len(insufficientResourcesError.OffendingResourceKinds)).To(Equal(1))
		Expect(containsOffendingResourceKind(insufficientResourcesError.OffendingResourceKinds, scheduling.GPU)).To(BeTrue())
		Expect(kernel2Spec.Equals(insufficientResourcesError.RequestedResources)).To(BeTrue())
		Expect(resourceManager.IdleResources().Equals(insufficientResourcesError.AvailableResources)).To(BeTrue())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(3))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(1))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(1500, 49000, 3, 24))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6500, 15000, 5, 8))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))

		err = resourceManager.ReleaseCommittedResources(1, "Kernel3")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2000, 50000, 4, 25))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6000, 14000, 4, 7))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel3")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2000, 50000, 4, 25))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6000, 14000, 4, 7))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(3000, 52000, 6, 29))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5000, 12000, 2, 3))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.ReleaseCommittedResources(1, "Kernel3")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6000, 60000, 2, 20))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2000, 4000, 6, 12))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel2")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(6000, 60000, 2, 20))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2000, 4000, 6, 12))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel2")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7000, 62000, 6, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(1000, 2000, 2, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(8000, 64000, 8, 32))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(0, 0, 0, 0))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(0))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(4))

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())

		err = resourceManager.CommitResources(1, "Kernel3", kernel3Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel4")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(3000, 52000, 6, 29))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5000, 12000, 2, 3))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.CommitResources(1, "Kernel1", kernel1Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2000, 50000, 4, 25))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(6000, 14000, 4, 7))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel1")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(3000, 52000, 6, 29))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5000, 12000, 2, 3))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.CommitResources(1, "Kernel4", kernel4Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(2500, 51000, 5, 28))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(5500, 13000, 3, 4))).To(BeTrue())

		err = resourceManager.ReleaseCommittedResources(1, "Kernel3")
		Expect(err).To(BeNil())
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(7500, 63000, 7, 31))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(500, 1000, 1, 1))).To(BeTrue())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(1))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(3))

		err = resourceManager.CommitResources(1, "Kernel2", kernel2Spec, false)
		Expect(err).To(BeNil())
		GinkgoWriter.Printf("resourceManager.CommittedResources(): %s\n", resourceManager.CommittedResources().String())
		Expect(resourceManager.NumAllocations()).To(Equal(4))
		Expect(resourceManager.NumCommittedAllocations()).To(Equal(2))
		Expect(resourceManager.NumPendingAllocations()).To(Equal(2))
		Expect(resourceManager.IdleResources().Equals(types.NewDecimalSpec(5500, 59000, 1, 19))).To(BeTrue())
		Expect(resourceManager.CommittedResources().Equals(types.NewDecimalSpec(2500, 5000, 7, 13))).To(BeTrue())

	})
})
